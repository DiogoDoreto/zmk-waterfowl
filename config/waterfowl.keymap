/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define L_DFT 0
#define L_NAV 1
#define L_NUMPAD 2
#define L_MEDIA 3
#define L_NUM 4
#define L_SYM 5
#define L_FUN 6
#define L_GAME0 7

&sk {
	quick-release;
};

/ {
	behaviors {
		hh: behavior_homerow_hold {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_HOLD";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		lh: behavior_layer_hold {
			compatible = "zmk,behavior-hold-tap";
			label = "LAYER_HOLD";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&kp>;
		};
		lhs: behavior_layer_hold_sticky {
			compatible = "zmk,behavior-hold-tap";
			label = "LAYER_HOLD_STICKY";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&sk>;
		};
		caps: caps_char_word {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_0";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&lhs L_FUN LSHFT>, <&caps_word>;
		};
	};
	macros {
		m_arrowfn: m_arrowfn {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp EQUAL &kp LS(DOT) &kp SPACE>;
		};
		m_async: m_async {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp A &kp S &kp Y &kp N &kp C &kp SPACE>;
		};
		m_const: m_const {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp C &kp O &kp N &kp S &kp T &kp SPACE>;
		};
		m_function: m_function {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp F &kp U &kp N &kp C &kp T &kp I &kp O &kp N &kp SPACE>;
		};
		m_return: m_return {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp R &kp E &kp T &kp U &kp R &kp N &kp SPACE>;
		};
	};
	keymap {
		compatible = "zmk,keymap";

		default_layer {
/* L_DFT
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   Q  |   W  |   E  |   R  |   T  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   A  |   S  |   D  |   F  |   G  |                      |   H  |   J  |   K  |   L  |   '  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |   Z  |   X  |   C  |   V  |   B  |  | Num |    | Nav |  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | ESC | SPACE | TAB  |            |  BS | ENTER | Caps |   | Game|
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp Q		&kp W		&kp E		&kp R		&kp T			&kp Y	&kp U		&kp I		&kp O		&kp P
	&hh LGUI A	&hh LALT S	&hh LCTRL D	&hh LSHFT F	&kp G			&kp H	&hh LSHFT J	&hh LCTRL K	&hh LALT L	&hh LGUI APOS
	&kp Z		&hh RALT X	&kp C		&kp V		&kp B			&kp N	&kp M		&kp COMMA	&hh RALT DOT	&kp FSLH
	&kp N1	&lh L_MEDIA ESC	&lh L_NAV SPACE	&lh L_NUMPAD TAB	&tog L_NUM	&tog L_NAV	&lh L_SYM BSPC	&lh L_NUM RET	&caps	&tog L_GAME0
			>;

			sensor-bindings = <
				&inc_dec_kp LEFT RIGHT
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp DOWN UP
				&inc_dec_kp LEFT RIGHT
			>;
		};

		nav_layer {
/* 1 L_NAV
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |  ^Q  |  ^W  |      |      |      |                      |PrtScr|      |      |      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  CMD |  ALT |  ^D  |  ^F  |      |                      | Left | Down |  Up  | Right| CAPSW|
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |  ^Z  |  ^X  |  ^C  |  ^V  |  ^B  |  |  2  |    |  3  |  | Home | PgDn | PgUp | End  | Ins  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   |     |  (*)  |      |            |  BS  | ENTER | DEL |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp LC(Q)	&kp LC(W)	&none		        &none	            &none       &kp PSCRN	&none		&none		&none		&none
	&kp LGUI 	&kp LALT	&mt LCTRL LC(D)	&mt LSHFT LC(F)	&none	    &kp LEFT	&kp DOWN	&kp UP		&kp RIGHT	&caps_word
	&kp LC(Z)	&kp LC(X)	&kp LC(C)	        &kp LC(V)	        &kp LC(B)	&kp HOME	&kp PG_DN	&kp PG_UP	&kp END		&kp INS
	&kp N1		&none		&trans		        &none		        &kp N2		&tog L_NAV	&kp BSPC	&kp RET		&kp DEL		&kp N4
			>;
		};

		numpad_layer {
/* 2 L_NUMPAD
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |      |      |      |return|      |                      |  /   |  7   |  8   |  9   |  -   |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * | async|  ALT | CTRL | func |  =>  |                      |  *   |  4   |  5   |  6   |  +   |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |      |      | const|      |      |  |  2  |    |NLock|  |  .   |  1   |  2   |  3   |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   |     |       |  (*) |            |  BS  |   0   | DEL |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&none		&none		&none		&m_return		&none			&kp KP_DIVIDE	&kp KP_N7	&kp KP_N8	&kp KP_N9	&kp KP_MINUS
	&m_async 	&kp LALT	&kp LCTRL	&m_function	&m_arrowfn	&kp KP_MULTIPLY	&kp KP_N4	&kp KP_N5	&kp KP_N6	&kp KP_PLUS
	&none		&none		&m_const	&none			&none			&kp KP_DOT		&kp KP_N1	&kp KP_N2	&kp KP_N3	&none
	&kp N1		&none		&none		&trans			&kp N2			&kp KP_NUMLOCK	&kp BSPC	&kp KP_N0	&kp DEL	&kp N4
			>;
		};

		media_layer {
/* 3 L_MEDIA
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |      |      |      |      | BTCLR|                      | BT 0 | BT 1 | BT 2 | BT 3 | BT 4 |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  CMD |  ALT | CTRL | Shift|      |                      | Prev | VoDn | VoUp | Next |      |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |      |      |      |      |      |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | (*) |       |      |            | STOP | PLAY | MUTE |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&none		&none		&none		&none		&bt BT_CLR		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4
	&kp LGUI 	&kp LALT	&kp LCTRL	&kp LSHFT	&none			&kp C_PREV	&kp C_VOL_DN	&kp C_VOL_UP	&kp C_NEXT	&none
	&none		&none		&none		&none		&none			&none		&none			&none			&none		&none
	&kp N1		&none		&none		&trans		&kp N2			&kp N3		&kp C_STOP		&kp C_PP		&kp C_MUTE	&kp N4
			>;
		};

		num_layer {
/* 4 L_NUM
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |  [   |  7   |  8   |  9   |  ]   |                      |      |      |      |      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  ;   |  4   |  5   |  6   |  =   |                      |      | Shift| CTRL | ALT  | CMD  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |  `   |  1   |  2   |  3   |  \   |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   |  .  |   0   |  -   |            |      | (*)  |      |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp LBKT	&kp N7	&kp N8	&kp N9		&kp RBKT		&none		&none		&none		&none		&none
	&kp SEMI 	&kp N4	&kp N5	&kp N6		&kp EQUAL		&none		&kp RSHFT	&kp RCTRL	&kp RALT	&kp RGUI
	&kp GRAVE	&kp N1	&kp N2	&kp N3		&kp BSLH		&none		&none		&none		&none		&none
	&kp N1		&kp DOT	&kp N0	&kp MINUS	&tog L_NUM		&kp N3		&none		&trans		&none		&kp N4
			>;
		};

		sym_layer {
/* 5 L_SYM
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |  {   |  &   |  *   |  )   |  }   |                      |      |      |      |      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  :   |  $   |  %   |  ^   |  +   |                      |      | Shift| CTRL | ALT  | CMD  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |  ~   |  !   |  @   |  #   |  |   |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   |  (  |   )   |  _   |            |  (*)  |      |     |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp LBRC	&kp AMPS	&kp STAR	&kp RPAR	&kp RBRC		&none		&none		&none		&none		&none
	&kp COLON 	&kp DLLR	&kp PRCNT	&kp CARET	&kp PLUS		&none		&kp RSHFT	&kp RCTRL	&kp RALT	&kp RGUI
	&kp TILDE	&kp EXCL	&kp AT		&kp HASH	&kp PIPE		&none		&none		&none		&none		&none
	&kp N1		&kp LPAR	&kp RPAR	&kp UNDER	&kp N2			&kp N3		&trans		&none		&none		&kp N4
			>;
		};

		fn_layer {
/* 6 L_FUN
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |  F12 |  F7  |  F8  |  F9  |      |                      |      |      |      |      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  F11 |  F4  |  F5  |  F6  |      |                      |      | Shift| CTRL | ALT  | CMD  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |  F10 |  F1  |  F2  |  F3  |      |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   |     |       |      |            |      |       | (*) |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp F12	&kp F7	&kp F8	&kp F9	&none		&none		&none		&none		&none		&none
	&kp F11	&kp F4	&kp F5	&kp F6	&none		&none		&kp RSHFT	&kp RCTRL	&kp RALT	&kp RGUI
	&kp F10	&kp F1	&kp F2	&kp F3	&none		&none		&none		&none		&none		&none
	&kp N1	&none	&none	&none	&kp N2		&kp N3		&none		&none		&trans		&kp N4
			>;
		};

		game0 {
/* L_GAME0
 *
 * ,----------------------------------.                      ,----------------------------------.
 * | Tab  |   Q  |   W  |   E  |   R  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * | Shift|   A  |   S  |   D  |   F  |                      |   H  |   J  |   K  |   L  |   '  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * | Ctrl |   Z  |   X  |   C  |   V  |  | Num |    | Nav |  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | ESC | SPACE | ENTER|            |  BS | ENTER | Caps |   | Game|
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp TAB		&kp Q	&kp W		&kp E	&kp R					&kp Y	&kp U		&kp I		&kp O		&kp P
	&kp LSHFT	&kp A	&kp S		&kp D	&kp F					&kp H	&hh LSHFT J	&hh LCTRL K	&hh LALT L	&hh LGUI APOS
	&kp LCTRL	&kp Z	&kp X		&kp C	&kp V					&kp N	&kp M		&kp COMMA	&hh RALT DOT	&kp FSLH
	&kp N1		&kp ESC	&kp SPACE	&lh L_NUM RET	&tog L_NUM		&tog L_NAV	&lh L_SYM BSPC	&lh L_NUM RET	&caps	&tog L_GAME0
			>;
		};

	};
};
/* vim:ft=dts:ts=4:sw=4:noet
*/
